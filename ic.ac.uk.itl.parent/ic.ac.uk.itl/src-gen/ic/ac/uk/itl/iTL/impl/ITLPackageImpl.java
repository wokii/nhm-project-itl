/**
 * generated by Xtext 2.17.0
 */
package ic.ac.uk.itl.iTL.impl;

import ic.ac.uk.itl.iTL.ITLFactory;
import ic.ac.uk.itl.iTL.ITLPackage;
import ic.ac.uk.itl.iTL.Model;
import ic.ac.uk.itl.iTL.W3af;
import ic.ac.uk.itl.iTL.testing_tool;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

import org.eclipse.emf.ecore.impl.EPackageImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Package</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class ITLPackageImpl extends EPackageImpl implements ITLPackage
{
  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass modelEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass testing_toolEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass zapEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass zaP_ADDRESSEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass zaP_MAX_DEPTHEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass zaP_API_KEYEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass zaP_TARGETEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass w3afEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass w3AF_REPORT_ADDRESSEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass w3AF_ADDRESSEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass w3AF_TEST_TYPEEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass w3AF_TARGETEClass = null;

  /**
   * Creates an instance of the model <b>Package</b>, registered with
   * {@link org.eclipse.emf.ecore.EPackage.Registry EPackage.Registry} by the package
   * package URI value.
   * <p>Note: the correct way to create the package is via the static
   * factory method {@link #init init()}, which also performs
   * initialization of the package, or returns the registered package,
   * if one already exists.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.eclipse.emf.ecore.EPackage.Registry
   * @see ic.ac.uk.itl.iTL.ITLPackage#eNS_URI
   * @see #init()
   * @generated
   */
  private ITLPackageImpl()
  {
    super(eNS_URI, ITLFactory.eINSTANCE);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private static boolean isInited = false;

  /**
   * Creates, registers, and initializes the <b>Package</b> for this model, and for any others upon which it depends.
   * 
   * <p>This method is used to initialize {@link ITLPackage#eINSTANCE} when that field is accessed.
   * Clients should not invoke it directly. Instead, they should simply access that field to obtain the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #eNS_URI
   * @see #createPackageContents()
   * @see #initializePackageContents()
   * @generated
   */
  public static ITLPackage init()
  {
    if (isInited) return (ITLPackage)EPackage.Registry.INSTANCE.getEPackage(ITLPackage.eNS_URI);

    // Obtain or create and register package
    ITLPackageImpl theITLPackage = (ITLPackageImpl)(EPackage.Registry.INSTANCE.get(eNS_URI) instanceof ITLPackageImpl ? EPackage.Registry.INSTANCE.get(eNS_URI) : new ITLPackageImpl());

    isInited = true;

    // Create package meta-data objects
    theITLPackage.createPackageContents();

    // Initialize created meta-data
    theITLPackage.initializePackageContents();

    // Mark meta-data to indicate it can't be changed
    theITLPackage.freeze();

  
    // Update the registry and return the package
    EPackage.Registry.INSTANCE.put(ITLPackage.eNS_URI, theITLPackage);
    return theITLPackage;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getModel()
  {
    return modelEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getModel_Testing_tools()
  {
    return (EReference)modelEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass gettesting_tool()
  {
    return testing_toolEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute gettesting_tool_Name()
  {
    return (EAttribute)testing_toolEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getZAP()
  {
    return zapEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getZAP_Zap_target()
  {
    return (EReference)zapEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getZAP_Zap_address()
  {
    return (EReference)zapEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getZAP_Zap_max_depth()
  {
    return (EReference)zapEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getZAP_Zap_api_key()
  {
    return (EReference)zapEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getZAP_ADDRESS()
  {
    return zaP_ADDRESSEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getZAP_ADDRESS_Name()
  {
    return (EAttribute)zaP_ADDRESSEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getZAP_MAX_DEPTH()
  {
    return zaP_MAX_DEPTHEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getZAP_MAX_DEPTH_Name()
  {
    return (EAttribute)zaP_MAX_DEPTHEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getZAP_API_KEY()
  {
    return zaP_API_KEYEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getZAP_API_KEY_Name()
  {
    return (EAttribute)zaP_API_KEYEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getZAP_TARGET()
  {
    return zaP_TARGETEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getZAP_TARGET_Name()
  {
    return (EAttribute)zaP_TARGETEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getW3af()
  {
    return w3afEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getW3af_W3af_test_type()
  {
    return (EReference)w3afEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getW3af_W3af_address()
  {
    return (EReference)w3afEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getW3af_W3af_report_path()
  {
    return (EReference)w3afEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getW3af_W3af_target()
  {
    return (EReference)w3afEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getW3AF_REPORT_ADDRESS()
  {
    return w3AF_REPORT_ADDRESSEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getW3AF_REPORT_ADDRESS_Name()
  {
    return (EAttribute)w3AF_REPORT_ADDRESSEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getW3AF_ADDRESS()
  {
    return w3AF_ADDRESSEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getW3AF_ADDRESS_Name()
  {
    return (EAttribute)w3AF_ADDRESSEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getW3AF_TEST_TYPE()
  {
    return w3AF_TEST_TYPEEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getW3AF_TEST_TYPE_Name()
  {
    return (EAttribute)w3AF_TEST_TYPEEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getW3AF_TARGET()
  {
    return w3AF_TARGETEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getW3AF_TARGET_Name()
  {
    return (EAttribute)w3AF_TARGETEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ITLFactory getITLFactory()
  {
    return (ITLFactory)getEFactoryInstance();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isCreated = false;

  /**
   * Creates the meta-model objects for the package.  This method is
   * guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void createPackageContents()
  {
    if (isCreated) return;
    isCreated = true;

    // Create classes and their features
    modelEClass = createEClass(MODEL);
    createEReference(modelEClass, MODEL__TESTING_TOOLS);

    testing_toolEClass = createEClass(TESTING_TOOL);
    createEAttribute(testing_toolEClass, TESTING_TOOL__NAME);

    zapEClass = createEClass(ZAP);
    createEReference(zapEClass, ZAP__ZAP_TARGET);
    createEReference(zapEClass, ZAP__ZAP_ADDRESS);
    createEReference(zapEClass, ZAP__ZAP_MAX_DEPTH);
    createEReference(zapEClass, ZAP__ZAP_API_KEY);

    zaP_ADDRESSEClass = createEClass(ZAP_ADDRESS);
    createEAttribute(zaP_ADDRESSEClass, ZAP_ADDRESS__NAME);

    zaP_MAX_DEPTHEClass = createEClass(ZAP_MAX_DEPTH);
    createEAttribute(zaP_MAX_DEPTHEClass, ZAP_MAX_DEPTH__NAME);

    zaP_API_KEYEClass = createEClass(ZAP_API_KEY);
    createEAttribute(zaP_API_KEYEClass, ZAP_API_KEY__NAME);

    zaP_TARGETEClass = createEClass(ZAP_TARGET);
    createEAttribute(zaP_TARGETEClass, ZAP_TARGET__NAME);

    w3afEClass = createEClass(W3AF);
    createEReference(w3afEClass, W3AF__W3AF_TEST_TYPE);
    createEReference(w3afEClass, W3AF__W3AF_ADDRESS);
    createEReference(w3afEClass, W3AF__W3AF_REPORT_PATH);
    createEReference(w3afEClass, W3AF__W3AF_TARGET);

    w3AF_REPORT_ADDRESSEClass = createEClass(W3AF_REPORT_ADDRESS);
    createEAttribute(w3AF_REPORT_ADDRESSEClass, W3AF_REPORT_ADDRESS__NAME);

    w3AF_ADDRESSEClass = createEClass(W3AF_ADDRESS);
    createEAttribute(w3AF_ADDRESSEClass, W3AF_ADDRESS__NAME);

    w3AF_TEST_TYPEEClass = createEClass(W3AF_TEST_TYPE);
    createEAttribute(w3AF_TEST_TYPEEClass, W3AF_TEST_TYPE__NAME);

    w3AF_TARGETEClass = createEClass(W3AF_TARGET);
    createEAttribute(w3AF_TARGETEClass, W3AF_TARGET__NAME);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isInitialized = false;

  /**
   * Complete the initialization of the package and its meta-model.  This
   * method is guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void initializePackageContents()
  {
    if (isInitialized) return;
    isInitialized = true;

    // Initialize package
    setName(eNAME);
    setNsPrefix(eNS_PREFIX);
    setNsURI(eNS_URI);

    // Create type parameters

    // Set bounds for type parameters

    // Add supertypes to classes
    zapEClass.getESuperTypes().add(this.gettesting_tool());
    w3afEClass.getESuperTypes().add(this.gettesting_tool());

    // Initialize classes and features; add operations and parameters
    initEClass(modelEClass, Model.class, "Model", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getModel_Testing_tools(), this.gettesting_tool(), null, "testing_tools", null, 0, -1, Model.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(testing_toolEClass, testing_tool.class, "testing_tool", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(gettesting_tool_Name(), ecorePackage.getEString(), "name", null, 0, 1, testing_tool.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(zapEClass, ic.ac.uk.itl.iTL.ZAP.class, "ZAP", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getZAP_Zap_target(), this.getZAP_TARGET(), null, "zap_target", null, 0, 1, ic.ac.uk.itl.iTL.ZAP.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getZAP_Zap_address(), this.getZAP_ADDRESS(), null, "zap_address", null, 0, 1, ic.ac.uk.itl.iTL.ZAP.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getZAP_Zap_max_depth(), this.getZAP_MAX_DEPTH(), null, "zap_max_depth", null, 0, 1, ic.ac.uk.itl.iTL.ZAP.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getZAP_Zap_api_key(), this.getZAP_API_KEY(), null, "zap_api_key", null, 0, 1, ic.ac.uk.itl.iTL.ZAP.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(zaP_ADDRESSEClass, ic.ac.uk.itl.iTL.ZAP_ADDRESS.class, "ZAP_ADDRESS", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getZAP_ADDRESS_Name(), ecorePackage.getEString(), "name", null, 0, 1, ic.ac.uk.itl.iTL.ZAP_ADDRESS.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(zaP_MAX_DEPTHEClass, ic.ac.uk.itl.iTL.ZAP_MAX_DEPTH.class, "ZAP_MAX_DEPTH", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getZAP_MAX_DEPTH_Name(), ecorePackage.getEInt(), "name", null, 0, 1, ic.ac.uk.itl.iTL.ZAP_MAX_DEPTH.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(zaP_API_KEYEClass, ic.ac.uk.itl.iTL.ZAP_API_KEY.class, "ZAP_API_KEY", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getZAP_API_KEY_Name(), ecorePackage.getEString(), "name", null, 0, 1, ic.ac.uk.itl.iTL.ZAP_API_KEY.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(zaP_TARGETEClass, ic.ac.uk.itl.iTL.ZAP_TARGET.class, "ZAP_TARGET", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getZAP_TARGET_Name(), ecorePackage.getEString(), "name", null, 0, 1, ic.ac.uk.itl.iTL.ZAP_TARGET.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(w3afEClass, W3af.class, "W3af", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getW3af_W3af_test_type(), this.getW3AF_TEST_TYPE(), null, "w3af_test_type", null, 0, 1, W3af.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getW3af_W3af_address(), this.getW3AF_ADDRESS(), null, "w3af_address", null, 0, 1, W3af.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getW3af_W3af_report_path(), this.getW3AF_REPORT_ADDRESS(), null, "w3af_report_path", null, 0, 1, W3af.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getW3af_W3af_target(), this.getW3AF_TARGET(), null, "w3af_target", null, 0, 1, W3af.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(w3AF_REPORT_ADDRESSEClass, ic.ac.uk.itl.iTL.W3AF_REPORT_ADDRESS.class, "W3AF_REPORT_ADDRESS", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getW3AF_REPORT_ADDRESS_Name(), ecorePackage.getEString(), "name", null, 0, 1, ic.ac.uk.itl.iTL.W3AF_REPORT_ADDRESS.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(w3AF_ADDRESSEClass, ic.ac.uk.itl.iTL.W3AF_ADDRESS.class, "W3AF_ADDRESS", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getW3AF_ADDRESS_Name(), ecorePackage.getEString(), "name", null, 0, 1, ic.ac.uk.itl.iTL.W3AF_ADDRESS.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(w3AF_TEST_TYPEEClass, ic.ac.uk.itl.iTL.W3AF_TEST_TYPE.class, "W3AF_TEST_TYPE", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getW3AF_TEST_TYPE_Name(), ecorePackage.getEString(), "name", null, 0, 1, ic.ac.uk.itl.iTL.W3AF_TEST_TYPE.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(w3AF_TARGETEClass, ic.ac.uk.itl.iTL.W3AF_TARGET.class, "W3AF_TARGET", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getW3AF_TARGET_Name(), ecorePackage.getEString(), "name", null, 0, 1, ic.ac.uk.itl.iTL.W3AF_TARGET.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    // Create resource
    createResource(eNS_URI);
  }

} //ITLPackageImpl
