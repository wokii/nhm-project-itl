/*
 * generated by Xtext 2.17.0
 */
grammar InternalITL;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package ic.ac.uk.itl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package ic.ac.uk.itl.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import ic.ac.uk.itl.services.ITLGrammarAccess;

}

@parser::members {

 	private ITLGrammarAccess grammarAccess;

    public InternalITLParser(TokenStream input, ITLGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Model";
   	}

   	@Override
   	protected ITLGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	iv_ruleModel=ruleModel
	{ $current=$iv_ruleModel.current; }
	EOF;

// Rule Model
ruleModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getModelAccess().getTesting_toolsTesting_toolParserRuleCall_0());
			}
			lv_testing_tools_0_0=ruletesting_tool
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getModelRule());
				}
				add(
					$current,
					"testing_tools",
					lv_testing_tools_0_0,
					"ic.ac.uk.itl.ITL.testing_tool");
				afterParserOrEnumRuleCall();
			}
		)
	)*
;

// Entry rule entryRuletesting_tool
entryRuletesting_tool returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTesting_toolRule()); }
	iv_ruletesting_tool=ruletesting_tool
	{ $current=$iv_ruletesting_tool.current; }
	EOF;

// Rule testing_tool
ruletesting_tool returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getTesting_toolAccess().getZAPParserRuleCall_0());
		}
		this_ZAP_0=ruleZAP
		{
			$current = $this_ZAP_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTesting_toolAccess().getW3afParserRuleCall_1());
		}
		this_W3af_1=ruleW3af
		{
			$current = $this_W3af_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleZAP
entryRuleZAP returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getZAPRule()); }
	iv_ruleZAP=ruleZAP
	{ $current=$iv_ruleZAP.current; }
	EOF;

// Rule ZAP
ruleZAP returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='ZAP'
		{
			newLeafNode(otherlv_0, grammarAccess.getZAPAccess().getZAPKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getZAPAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getZAPRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getZAPAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getZAPAccess().getZap_targetZAP_TARGETParserRuleCall_3_0());
				}
				lv_zap_target_3_0=ruleZAP_TARGET
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getZAPRule());
					}
					set(
						$current,
						"zap_target",
						lv_zap_target_3_0,
						"ic.ac.uk.itl.ITL.ZAP_TARGET");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4=';'
		{
			newLeafNode(otherlv_4, grammarAccess.getZAPAccess().getSemicolonKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getZAPAccess().getZap_addressZAP_ADDRESSParserRuleCall_5_0());
				}
				lv_zap_address_5_0=ruleZAP_ADDRESS
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getZAPRule());
					}
					set(
						$current,
						"zap_address",
						lv_zap_address_5_0,
						"ic.ac.uk.itl.ITL.ZAP_ADDRESS");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6=';'
		{
			newLeafNode(otherlv_6, grammarAccess.getZAPAccess().getSemicolonKeyword_6());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getZAPAccess().getZap_max_depthZAP_MAX_DEPTHParserRuleCall_7_0());
				}
				lv_zap_max_depth_7_0=ruleZAP_MAX_DEPTH
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getZAPRule());
					}
					set(
						$current,
						"zap_max_depth",
						lv_zap_max_depth_7_0,
						"ic.ac.uk.itl.ITL.ZAP_MAX_DEPTH");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_8=';'
		{
			newLeafNode(otherlv_8, grammarAccess.getZAPAccess().getSemicolonKeyword_8());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getZAPAccess().getZap_api_keyZAP_API_KEYParserRuleCall_9_0());
				}
				lv_zap_api_key_9_0=ruleZAP_API_KEY
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getZAPRule());
					}
					set(
						$current,
						"zap_api_key",
						lv_zap_api_key_9_0,
						"ic.ac.uk.itl.ITL.ZAP_API_KEY");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_10=';'
			{
				newLeafNode(otherlv_10, grammarAccess.getZAPAccess().getSemicolonKeyword_10());
			}
		)?
		otherlv_11='}'
		{
			newLeafNode(otherlv_11, grammarAccess.getZAPAccess().getRightCurlyBracketKeyword_11());
		}
	)
;

// Entry rule entryRuleZAP_ADDRESS
entryRuleZAP_ADDRESS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getZAP_ADDRESSRule()); }
	iv_ruleZAP_ADDRESS=ruleZAP_ADDRESS
	{ $current=$iv_ruleZAP_ADDRESS.current; }
	EOF;

// Rule ZAP_ADDRESS
ruleZAP_ADDRESS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='ZAP_ADDRESS:'
		{
			newLeafNode(otherlv_0, grammarAccess.getZAP_ADDRESSAccess().getZAP_ADDRESSKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_STRING
				{
					newLeafNode(lv_name_1_0, grammarAccess.getZAP_ADDRESSAccess().getNameSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getZAP_ADDRESSRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleZAP_MAX_DEPTH
entryRuleZAP_MAX_DEPTH returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getZAP_MAX_DEPTHRule()); }
	iv_ruleZAP_MAX_DEPTH=ruleZAP_MAX_DEPTH
	{ $current=$iv_ruleZAP_MAX_DEPTH.current; }
	EOF;

// Rule ZAP_MAX_DEPTH
ruleZAP_MAX_DEPTH returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='ZAP_MAX_DEPTH:'
		{
			newLeafNode(otherlv_0, grammarAccess.getZAP_MAX_DEPTHAccess().getZAP_MAX_DEPTHKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_INT
				{
					newLeafNode(lv_name_1_0, grammarAccess.getZAP_MAX_DEPTHAccess().getNameINTTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getZAP_MAX_DEPTHRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
	)
;

// Entry rule entryRuleZAP_API_KEY
entryRuleZAP_API_KEY returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getZAP_API_KEYRule()); }
	iv_ruleZAP_API_KEY=ruleZAP_API_KEY
	{ $current=$iv_ruleZAP_API_KEY.current; }
	EOF;

// Rule ZAP_API_KEY
ruleZAP_API_KEY returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='ZAP_API_KEY:'
		{
			newLeafNode(otherlv_0, grammarAccess.getZAP_API_KEYAccess().getZAP_API_KEYKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_STRING
				{
					newLeafNode(lv_name_1_0, grammarAccess.getZAP_API_KEYAccess().getNameSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getZAP_API_KEYRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleZAP_TARGET
entryRuleZAP_TARGET returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getZAP_TARGETRule()); }
	iv_ruleZAP_TARGET=ruleZAP_TARGET
	{ $current=$iv_ruleZAP_TARGET.current; }
	EOF;

// Rule ZAP_TARGET
ruleZAP_TARGET returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='ZAP_TARGET:'
		{
			newLeafNode(otherlv_0, grammarAccess.getZAP_TARGETAccess().getZAP_TARGETKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_STRING
				{
					newLeafNode(lv_name_1_0, grammarAccess.getZAP_TARGETAccess().getNameSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getZAP_TARGETRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleW3af
entryRuleW3af returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getW3afRule()); }
	iv_ruleW3af=ruleW3af
	{ $current=$iv_ruleW3af.current; }
	EOF;

// Rule W3af
ruleW3af returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='W3af'
		{
			newLeafNode(otherlv_0, grammarAccess.getW3afAccess().getW3afKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getW3afAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getW3afRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getW3afAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getW3afAccess().getW3af_test_typeW3AF_TEST_TYPEParserRuleCall_3_0());
				}
				lv_w3af_test_type_3_0=ruleW3AF_TEST_TYPE
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getW3afRule());
					}
					set(
						$current,
						"w3af_test_type",
						lv_w3af_test_type_3_0,
						"ic.ac.uk.itl.ITL.W3AF_TEST_TYPE");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4=';'
		{
			newLeafNode(otherlv_4, grammarAccess.getW3afAccess().getSemicolonKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getW3afAccess().getW3af_addressW3AF_ADDRESSParserRuleCall_5_0());
				}
				lv_w3af_address_5_0=ruleW3AF_ADDRESS
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getW3afRule());
					}
					set(
						$current,
						"w3af_address",
						lv_w3af_address_5_0,
						"ic.ac.uk.itl.ITL.W3AF_ADDRESS");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6=';'
		{
			newLeafNode(otherlv_6, grammarAccess.getW3afAccess().getSemicolonKeyword_6());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getW3afAccess().getW3af_report_pathW3AF_REPORT_ADDRESSParserRuleCall_7_0());
				}
				lv_w3af_report_path_7_0=ruleW3AF_REPORT_ADDRESS
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getW3afRule());
					}
					set(
						$current,
						"w3af_report_path",
						lv_w3af_report_path_7_0,
						"ic.ac.uk.itl.ITL.W3AF_REPORT_ADDRESS");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_8=';'
		{
			newLeafNode(otherlv_8, grammarAccess.getW3afAccess().getSemicolonKeyword_8());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getW3afAccess().getW3af_targetW3AF_TARGETParserRuleCall_9_0());
				}
				lv_w3af_target_9_0=ruleW3AF_TARGET
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getW3afRule());
					}
					set(
						$current,
						"w3af_target",
						lv_w3af_target_9_0,
						"ic.ac.uk.itl.ITL.W3AF_TARGET");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_10=';'
			{
				newLeafNode(otherlv_10, grammarAccess.getW3afAccess().getSemicolonKeyword_10());
			}
		)?
		otherlv_11='}'
		{
			newLeafNode(otherlv_11, grammarAccess.getW3afAccess().getRightCurlyBracketKeyword_11());
		}
	)
;

// Entry rule entryRuleW3AF_REPORT_ADDRESS
entryRuleW3AF_REPORT_ADDRESS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getW3AF_REPORT_ADDRESSRule()); }
	iv_ruleW3AF_REPORT_ADDRESS=ruleW3AF_REPORT_ADDRESS
	{ $current=$iv_ruleW3AF_REPORT_ADDRESS.current; }
	EOF;

// Rule W3AF_REPORT_ADDRESS
ruleW3AF_REPORT_ADDRESS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='W3AF_REPORT_ADDRESS:'
		{
			newLeafNode(otherlv_0, grammarAccess.getW3AF_REPORT_ADDRESSAccess().getW3AF_REPORT_ADDRESSKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_STRING
				{
					newLeafNode(lv_name_1_0, grammarAccess.getW3AF_REPORT_ADDRESSAccess().getNameSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getW3AF_REPORT_ADDRESSRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleW3AF_ADDRESS
entryRuleW3AF_ADDRESS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getW3AF_ADDRESSRule()); }
	iv_ruleW3AF_ADDRESS=ruleW3AF_ADDRESS
	{ $current=$iv_ruleW3AF_ADDRESS.current; }
	EOF;

// Rule W3AF_ADDRESS
ruleW3AF_ADDRESS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='W3AF_ADDRESS:'
		{
			newLeafNode(otherlv_0, grammarAccess.getW3AF_ADDRESSAccess().getW3AF_ADDRESSKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_STRING
				{
					newLeafNode(lv_name_1_0, grammarAccess.getW3AF_ADDRESSAccess().getNameSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getW3AF_ADDRESSRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleW3AF_TEST_TYPE
entryRuleW3AF_TEST_TYPE returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getW3AF_TEST_TYPERule()); }
	iv_ruleW3AF_TEST_TYPE=ruleW3AF_TEST_TYPE
	{ $current=$iv_ruleW3AF_TEST_TYPE.current; }
	EOF;

// Rule W3AF_TEST_TYPE
ruleW3AF_TEST_TYPE returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='W3AF_TEST_TYPE:'
		{
			newLeafNode(otherlv_0, grammarAccess.getW3AF_TEST_TYPEAccess().getW3AF_TEST_TYPEKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_STRING
				{
					newLeafNode(lv_name_1_0, grammarAccess.getW3AF_TEST_TYPEAccess().getNameSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getW3AF_TEST_TYPERule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleW3AF_TARGET
entryRuleW3AF_TARGET returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getW3AF_TARGETRule()); }
	iv_ruleW3AF_TARGET=ruleW3AF_TARGET
	{ $current=$iv_ruleW3AF_TARGET.current; }
	EOF;

// Rule W3AF_TARGET
ruleW3AF_TARGET returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='W3AF_TARGET:'
		{
			newLeafNode(otherlv_0, grammarAccess.getW3AF_TARGETAccess().getW3AF_TARGETKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_STRING
				{
					newLeafNode(lv_name_1_0, grammarAccess.getW3AF_TARGETAccess().getNameSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getW3AF_TARGETRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
