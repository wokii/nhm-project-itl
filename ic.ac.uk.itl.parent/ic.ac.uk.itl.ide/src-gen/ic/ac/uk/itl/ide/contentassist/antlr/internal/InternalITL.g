/*
 * generated by Xtext 2.17.0
 */
grammar InternalITL;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package ic.ac.uk.itl.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package ic.ac.uk.itl.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import ic.ac.uk.itl.services.ITLGrammarAccess;

}
@parser::members {
	private ITLGrammarAccess grammarAccess;

	public void setGrammarAccess(ITLGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleModel
entryRuleModel
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelAccess().getTesting_toolsAssignment()); }
		(rule__Model__Testing_toolsAssignment)*
		{ after(grammarAccess.getModelAccess().getTesting_toolsAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuletesting_tool
entryRuletesting_tool
:
{ before(grammarAccess.getTesting_toolRule()); }
	 ruletesting_tool
{ after(grammarAccess.getTesting_toolRule()); } 
	 EOF 
;

// Rule testing_tool
ruletesting_tool 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTesting_toolAccess().getAlternatives()); }
		(rule__Testing_tool__Alternatives)
		{ after(grammarAccess.getTesting_toolAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleZAP
entryRuleZAP
:
{ before(grammarAccess.getZAPRule()); }
	 ruleZAP
{ after(grammarAccess.getZAPRule()); } 
	 EOF 
;

// Rule ZAP
ruleZAP 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getZAPAccess().getGroup()); }
		(rule__ZAP__Group__0)
		{ after(grammarAccess.getZAPAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleZAP_ADDRESS
entryRuleZAP_ADDRESS
:
{ before(grammarAccess.getZAP_ADDRESSRule()); }
	 ruleZAP_ADDRESS
{ after(grammarAccess.getZAP_ADDRESSRule()); } 
	 EOF 
;

// Rule ZAP_ADDRESS
ruleZAP_ADDRESS 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getZAP_ADDRESSAccess().getGroup()); }
		(rule__ZAP_ADDRESS__Group__0)
		{ after(grammarAccess.getZAP_ADDRESSAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleZAP_MAX_DEPTH
entryRuleZAP_MAX_DEPTH
:
{ before(grammarAccess.getZAP_MAX_DEPTHRule()); }
	 ruleZAP_MAX_DEPTH
{ after(grammarAccess.getZAP_MAX_DEPTHRule()); } 
	 EOF 
;

// Rule ZAP_MAX_DEPTH
ruleZAP_MAX_DEPTH 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getZAP_MAX_DEPTHAccess().getGroup()); }
		(rule__ZAP_MAX_DEPTH__Group__0)
		{ after(grammarAccess.getZAP_MAX_DEPTHAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleZAP_API_KEY
entryRuleZAP_API_KEY
:
{ before(grammarAccess.getZAP_API_KEYRule()); }
	 ruleZAP_API_KEY
{ after(grammarAccess.getZAP_API_KEYRule()); } 
	 EOF 
;

// Rule ZAP_API_KEY
ruleZAP_API_KEY 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getZAP_API_KEYAccess().getGroup()); }
		(rule__ZAP_API_KEY__Group__0)
		{ after(grammarAccess.getZAP_API_KEYAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleZAP_TARGET
entryRuleZAP_TARGET
:
{ before(grammarAccess.getZAP_TARGETRule()); }
	 ruleZAP_TARGET
{ after(grammarAccess.getZAP_TARGETRule()); } 
	 EOF 
;

// Rule ZAP_TARGET
ruleZAP_TARGET 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getZAP_TARGETAccess().getGroup()); }
		(rule__ZAP_TARGET__Group__0)
		{ after(grammarAccess.getZAP_TARGETAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleW3af
entryRuleW3af
:
{ before(grammarAccess.getW3afRule()); }
	 ruleW3af
{ after(grammarAccess.getW3afRule()); } 
	 EOF 
;

// Rule W3af
ruleW3af 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getW3afAccess().getGroup()); }
		(rule__W3af__Group__0)
		{ after(grammarAccess.getW3afAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleW3AF_REPORT_ADDRESS
entryRuleW3AF_REPORT_ADDRESS
:
{ before(grammarAccess.getW3AF_REPORT_ADDRESSRule()); }
	 ruleW3AF_REPORT_ADDRESS
{ after(grammarAccess.getW3AF_REPORT_ADDRESSRule()); } 
	 EOF 
;

// Rule W3AF_REPORT_ADDRESS
ruleW3AF_REPORT_ADDRESS 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getW3AF_REPORT_ADDRESSAccess().getGroup()); }
		(rule__W3AF_REPORT_ADDRESS__Group__0)
		{ after(grammarAccess.getW3AF_REPORT_ADDRESSAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleW3AF_ADDRESS
entryRuleW3AF_ADDRESS
:
{ before(grammarAccess.getW3AF_ADDRESSRule()); }
	 ruleW3AF_ADDRESS
{ after(grammarAccess.getW3AF_ADDRESSRule()); } 
	 EOF 
;

// Rule W3AF_ADDRESS
ruleW3AF_ADDRESS 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getW3AF_ADDRESSAccess().getGroup()); }
		(rule__W3AF_ADDRESS__Group__0)
		{ after(grammarAccess.getW3AF_ADDRESSAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleW3AF_TEST_TYPE
entryRuleW3AF_TEST_TYPE
:
{ before(grammarAccess.getW3AF_TEST_TYPERule()); }
	 ruleW3AF_TEST_TYPE
{ after(grammarAccess.getW3AF_TEST_TYPERule()); } 
	 EOF 
;

// Rule W3AF_TEST_TYPE
ruleW3AF_TEST_TYPE 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getW3AF_TEST_TYPEAccess().getGroup()); }
		(rule__W3AF_TEST_TYPE__Group__0)
		{ after(grammarAccess.getW3AF_TEST_TYPEAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleW3AF_TARGET
entryRuleW3AF_TARGET
:
{ before(grammarAccess.getW3AF_TARGETRule()); }
	 ruleW3AF_TARGET
{ after(grammarAccess.getW3AF_TARGETRule()); } 
	 EOF 
;

// Rule W3AF_TARGET
ruleW3AF_TARGET 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getW3AF_TARGETAccess().getGroup()); }
		(rule__W3AF_TARGET__Group__0)
		{ after(grammarAccess.getW3AF_TARGETAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Testing_tool__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTesting_toolAccess().getZAPParserRuleCall_0()); }
		ruleZAP
		{ after(grammarAccess.getTesting_toolAccess().getZAPParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getTesting_toolAccess().getW3afParserRuleCall_1()); }
		ruleW3af
		{ after(grammarAccess.getTesting_toolAccess().getW3afParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ZAP__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ZAP__Group__0__Impl
	rule__ZAP__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ZAP__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getZAPAccess().getZAPKeyword_0()); }
	'ZAP'
	{ after(grammarAccess.getZAPAccess().getZAPKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ZAP__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ZAP__Group__1__Impl
	rule__ZAP__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ZAP__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getZAPAccess().getNameAssignment_1()); }
	(rule__ZAP__NameAssignment_1)
	{ after(grammarAccess.getZAPAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ZAP__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ZAP__Group__2__Impl
	rule__ZAP__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ZAP__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getZAPAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getZAPAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ZAP__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ZAP__Group__3__Impl
	rule__ZAP__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ZAP__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getZAPAccess().getZap_targetAssignment_3()); }
	(rule__ZAP__Zap_targetAssignment_3)
	{ after(grammarAccess.getZAPAccess().getZap_targetAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ZAP__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ZAP__Group__4__Impl
	rule__ZAP__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ZAP__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getZAPAccess().getSemicolonKeyword_4()); }
	';'
	{ after(grammarAccess.getZAPAccess().getSemicolonKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ZAP__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ZAP__Group__5__Impl
	rule__ZAP__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ZAP__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getZAPAccess().getZap_addressAssignment_5()); }
	(rule__ZAP__Zap_addressAssignment_5)
	{ after(grammarAccess.getZAPAccess().getZap_addressAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ZAP__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ZAP__Group__6__Impl
	rule__ZAP__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ZAP__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getZAPAccess().getSemicolonKeyword_6()); }
	';'
	{ after(grammarAccess.getZAPAccess().getSemicolonKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ZAP__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ZAP__Group__7__Impl
	rule__ZAP__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__ZAP__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getZAPAccess().getZap_max_depthAssignment_7()); }
	(rule__ZAP__Zap_max_depthAssignment_7)
	{ after(grammarAccess.getZAPAccess().getZap_max_depthAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ZAP__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ZAP__Group__8__Impl
	rule__ZAP__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__ZAP__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getZAPAccess().getSemicolonKeyword_8()); }
	';'
	{ after(grammarAccess.getZAPAccess().getSemicolonKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ZAP__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ZAP__Group__9__Impl
	rule__ZAP__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__ZAP__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getZAPAccess().getZap_api_keyAssignment_9()); }
	(rule__ZAP__Zap_api_keyAssignment_9)
	{ after(grammarAccess.getZAPAccess().getZap_api_keyAssignment_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ZAP__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ZAP__Group__10__Impl
	rule__ZAP__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__ZAP__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getZAPAccess().getSemicolonKeyword_10()); }
	(';')?
	{ after(grammarAccess.getZAPAccess().getSemicolonKeyword_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ZAP__Group__11
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ZAP__Group__11__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ZAP__Group__11__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getZAPAccess().getRightCurlyBracketKeyword_11()); }
	'}'
	{ after(grammarAccess.getZAPAccess().getRightCurlyBracketKeyword_11()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ZAP_ADDRESS__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ZAP_ADDRESS__Group__0__Impl
	rule__ZAP_ADDRESS__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ZAP_ADDRESS__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getZAP_ADDRESSAccess().getZAP_ADDRESSKeyword_0()); }
	'ZAP_ADDRESS:'
	{ after(grammarAccess.getZAP_ADDRESSAccess().getZAP_ADDRESSKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ZAP_ADDRESS__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ZAP_ADDRESS__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ZAP_ADDRESS__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getZAP_ADDRESSAccess().getNameAssignment_1()); }
	(rule__ZAP_ADDRESS__NameAssignment_1)
	{ after(grammarAccess.getZAP_ADDRESSAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ZAP_MAX_DEPTH__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ZAP_MAX_DEPTH__Group__0__Impl
	rule__ZAP_MAX_DEPTH__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ZAP_MAX_DEPTH__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getZAP_MAX_DEPTHAccess().getZAP_MAX_DEPTHKeyword_0()); }
	'ZAP_MAX_DEPTH:'
	{ after(grammarAccess.getZAP_MAX_DEPTHAccess().getZAP_MAX_DEPTHKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ZAP_MAX_DEPTH__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ZAP_MAX_DEPTH__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ZAP_MAX_DEPTH__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getZAP_MAX_DEPTHAccess().getNameAssignment_1()); }
	(rule__ZAP_MAX_DEPTH__NameAssignment_1)
	{ after(grammarAccess.getZAP_MAX_DEPTHAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ZAP_API_KEY__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ZAP_API_KEY__Group__0__Impl
	rule__ZAP_API_KEY__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ZAP_API_KEY__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getZAP_API_KEYAccess().getZAP_API_KEYKeyword_0()); }
	'ZAP_API_KEY:'
	{ after(grammarAccess.getZAP_API_KEYAccess().getZAP_API_KEYKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ZAP_API_KEY__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ZAP_API_KEY__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ZAP_API_KEY__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getZAP_API_KEYAccess().getNameAssignment_1()); }
	(rule__ZAP_API_KEY__NameAssignment_1)
	{ after(grammarAccess.getZAP_API_KEYAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ZAP_TARGET__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ZAP_TARGET__Group__0__Impl
	rule__ZAP_TARGET__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ZAP_TARGET__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getZAP_TARGETAccess().getZAP_TARGETKeyword_0()); }
	'ZAP_TARGET:'
	{ after(grammarAccess.getZAP_TARGETAccess().getZAP_TARGETKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ZAP_TARGET__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ZAP_TARGET__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ZAP_TARGET__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getZAP_TARGETAccess().getNameAssignment_1()); }
	(rule__ZAP_TARGET__NameAssignment_1)
	{ after(grammarAccess.getZAP_TARGETAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__W3af__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__W3af__Group__0__Impl
	rule__W3af__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__W3af__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getW3afAccess().getW3afKeyword_0()); }
	'W3af'
	{ after(grammarAccess.getW3afAccess().getW3afKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__W3af__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__W3af__Group__1__Impl
	rule__W3af__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__W3af__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getW3afAccess().getNameAssignment_1()); }
	(rule__W3af__NameAssignment_1)
	{ after(grammarAccess.getW3afAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__W3af__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__W3af__Group__2__Impl
	rule__W3af__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__W3af__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getW3afAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getW3afAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__W3af__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__W3af__Group__3__Impl
	rule__W3af__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__W3af__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getW3afAccess().getW3af_test_typeAssignment_3()); }
	(rule__W3af__W3af_test_typeAssignment_3)
	{ after(grammarAccess.getW3afAccess().getW3af_test_typeAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__W3af__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__W3af__Group__4__Impl
	rule__W3af__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__W3af__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getW3afAccess().getSemicolonKeyword_4()); }
	';'
	{ after(grammarAccess.getW3afAccess().getSemicolonKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__W3af__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__W3af__Group__5__Impl
	rule__W3af__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__W3af__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getW3afAccess().getW3af_addressAssignment_5()); }
	(rule__W3af__W3af_addressAssignment_5)
	{ after(grammarAccess.getW3afAccess().getW3af_addressAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__W3af__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__W3af__Group__6__Impl
	rule__W3af__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__W3af__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getW3afAccess().getSemicolonKeyword_6()); }
	';'
	{ after(grammarAccess.getW3afAccess().getSemicolonKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__W3af__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__W3af__Group__7__Impl
	rule__W3af__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__W3af__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getW3afAccess().getW3af_report_pathAssignment_7()); }
	(rule__W3af__W3af_report_pathAssignment_7)
	{ after(grammarAccess.getW3afAccess().getW3af_report_pathAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__W3af__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__W3af__Group__8__Impl
	rule__W3af__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__W3af__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getW3afAccess().getSemicolonKeyword_8()); }
	';'
	{ after(grammarAccess.getW3afAccess().getSemicolonKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__W3af__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__W3af__Group__9__Impl
	rule__W3af__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__W3af__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getW3afAccess().getW3af_targetAssignment_9()); }
	(rule__W3af__W3af_targetAssignment_9)
	{ after(grammarAccess.getW3afAccess().getW3af_targetAssignment_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__W3af__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__W3af__Group__10__Impl
	rule__W3af__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__W3af__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getW3afAccess().getSemicolonKeyword_10()); }
	(';')?
	{ after(grammarAccess.getW3afAccess().getSemicolonKeyword_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__W3af__Group__11
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__W3af__Group__11__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__W3af__Group__11__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getW3afAccess().getRightCurlyBracketKeyword_11()); }
	'}'
	{ after(grammarAccess.getW3afAccess().getRightCurlyBracketKeyword_11()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__W3AF_REPORT_ADDRESS__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__W3AF_REPORT_ADDRESS__Group__0__Impl
	rule__W3AF_REPORT_ADDRESS__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__W3AF_REPORT_ADDRESS__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getW3AF_REPORT_ADDRESSAccess().getW3AF_REPORT_ADDRESSKeyword_0()); }
	'W3AF_REPORT_ADDRESS:'
	{ after(grammarAccess.getW3AF_REPORT_ADDRESSAccess().getW3AF_REPORT_ADDRESSKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__W3AF_REPORT_ADDRESS__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__W3AF_REPORT_ADDRESS__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__W3AF_REPORT_ADDRESS__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getW3AF_REPORT_ADDRESSAccess().getNameAssignment_1()); }
	(rule__W3AF_REPORT_ADDRESS__NameAssignment_1)
	{ after(grammarAccess.getW3AF_REPORT_ADDRESSAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__W3AF_ADDRESS__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__W3AF_ADDRESS__Group__0__Impl
	rule__W3AF_ADDRESS__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__W3AF_ADDRESS__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getW3AF_ADDRESSAccess().getW3AF_ADDRESSKeyword_0()); }
	'W3AF_ADDRESS:'
	{ after(grammarAccess.getW3AF_ADDRESSAccess().getW3AF_ADDRESSKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__W3AF_ADDRESS__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__W3AF_ADDRESS__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__W3AF_ADDRESS__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getW3AF_ADDRESSAccess().getNameAssignment_1()); }
	(rule__W3AF_ADDRESS__NameAssignment_1)
	{ after(grammarAccess.getW3AF_ADDRESSAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__W3AF_TEST_TYPE__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__W3AF_TEST_TYPE__Group__0__Impl
	rule__W3AF_TEST_TYPE__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__W3AF_TEST_TYPE__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getW3AF_TEST_TYPEAccess().getW3AF_TEST_TYPEKeyword_0()); }
	'W3AF_TEST_TYPE:'
	{ after(grammarAccess.getW3AF_TEST_TYPEAccess().getW3AF_TEST_TYPEKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__W3AF_TEST_TYPE__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__W3AF_TEST_TYPE__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__W3AF_TEST_TYPE__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getW3AF_TEST_TYPEAccess().getNameAssignment_1()); }
	(rule__W3AF_TEST_TYPE__NameAssignment_1)
	{ after(grammarAccess.getW3AF_TEST_TYPEAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__W3AF_TARGET__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__W3AF_TARGET__Group__0__Impl
	rule__W3AF_TARGET__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__W3AF_TARGET__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getW3AF_TARGETAccess().getW3AF_TARGETKeyword_0()); }
	'W3AF_TARGET:'
	{ after(grammarAccess.getW3AF_TARGETAccess().getW3AF_TARGETKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__W3AF_TARGET__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__W3AF_TARGET__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__W3AF_TARGET__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getW3AF_TARGETAccess().getNameAssignment_1()); }
	(rule__W3AF_TARGET__NameAssignment_1)
	{ after(grammarAccess.getW3AF_TARGETAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Testing_toolsAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getTesting_toolsTesting_toolParserRuleCall_0()); }
		ruletesting_tool
		{ after(grammarAccess.getModelAccess().getTesting_toolsTesting_toolParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ZAP__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getZAPAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getZAPAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ZAP__Zap_targetAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getZAPAccess().getZap_targetZAP_TARGETParserRuleCall_3_0()); }
		ruleZAP_TARGET
		{ after(grammarAccess.getZAPAccess().getZap_targetZAP_TARGETParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ZAP__Zap_addressAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getZAPAccess().getZap_addressZAP_ADDRESSParserRuleCall_5_0()); }
		ruleZAP_ADDRESS
		{ after(grammarAccess.getZAPAccess().getZap_addressZAP_ADDRESSParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ZAP__Zap_max_depthAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getZAPAccess().getZap_max_depthZAP_MAX_DEPTHParserRuleCall_7_0()); }
		ruleZAP_MAX_DEPTH
		{ after(grammarAccess.getZAPAccess().getZap_max_depthZAP_MAX_DEPTHParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ZAP__Zap_api_keyAssignment_9
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getZAPAccess().getZap_api_keyZAP_API_KEYParserRuleCall_9_0()); }
		ruleZAP_API_KEY
		{ after(grammarAccess.getZAPAccess().getZap_api_keyZAP_API_KEYParserRuleCall_9_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ZAP_ADDRESS__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getZAP_ADDRESSAccess().getNameSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getZAP_ADDRESSAccess().getNameSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ZAP_MAX_DEPTH__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getZAP_MAX_DEPTHAccess().getNameINTTerminalRuleCall_1_0()); }
		RULE_INT
		{ after(grammarAccess.getZAP_MAX_DEPTHAccess().getNameINTTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ZAP_API_KEY__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getZAP_API_KEYAccess().getNameSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getZAP_API_KEYAccess().getNameSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ZAP_TARGET__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getZAP_TARGETAccess().getNameSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getZAP_TARGETAccess().getNameSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__W3af__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getW3afAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getW3afAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__W3af__W3af_test_typeAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getW3afAccess().getW3af_test_typeW3AF_TEST_TYPEParserRuleCall_3_0()); }
		ruleW3AF_TEST_TYPE
		{ after(grammarAccess.getW3afAccess().getW3af_test_typeW3AF_TEST_TYPEParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__W3af__W3af_addressAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getW3afAccess().getW3af_addressW3AF_ADDRESSParserRuleCall_5_0()); }
		ruleW3AF_ADDRESS
		{ after(grammarAccess.getW3afAccess().getW3af_addressW3AF_ADDRESSParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__W3af__W3af_report_pathAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getW3afAccess().getW3af_report_pathW3AF_REPORT_ADDRESSParserRuleCall_7_0()); }
		ruleW3AF_REPORT_ADDRESS
		{ after(grammarAccess.getW3afAccess().getW3af_report_pathW3AF_REPORT_ADDRESSParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__W3af__W3af_targetAssignment_9
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getW3afAccess().getW3af_targetW3AF_TARGETParserRuleCall_9_0()); }
		ruleW3AF_TARGET
		{ after(grammarAccess.getW3afAccess().getW3af_targetW3AF_TARGETParserRuleCall_9_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__W3AF_REPORT_ADDRESS__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getW3AF_REPORT_ADDRESSAccess().getNameSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getW3AF_REPORT_ADDRESSAccess().getNameSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__W3AF_ADDRESS__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getW3AF_ADDRESSAccess().getNameSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getW3AF_ADDRESSAccess().getNameSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__W3AF_TEST_TYPE__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getW3AF_TEST_TYPEAccess().getNameSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getW3AF_TEST_TYPEAccess().getNameSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__W3AF_TARGET__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getW3AF_TARGETAccess().getNameSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getW3AF_TARGETAccess().getNameSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
